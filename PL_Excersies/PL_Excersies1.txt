Name:- Poonam Pise
Roll no:- 200240520066
Excersies :- 01
----------------------


1)Write a program that computes the perimeter and the area of a rectangle. 
  Define your own values for the length and width. 
 (Assuming that L and W are the length and width of the rectangle, Perimeter = 2*(L+W) and Area = L*W.)
ANS:-
====

create table a_p
(
  area float(7,2),
  peri float(7,2)
);  

delimiter ?
create procedure x1()
begin 
declare l float(7,2) default 10;
declare w float(7,2) default 10;
declare area float(7,2);
declare peri float(7,2);
set peri=2*(l+w);
set area=l*w;
insert into a_p values(area, peri);
end;?
delimiter ;

Output:->
---------
# area, peri
100.00, 40.00
--------------------------------------------------------------------------------------------------
Q2)Write a program that declares an integer variable called num, assigns a value to it, and computes and 
   inserts into the tempp table the value of the variable itself, its square, and its cube.

ANS:-
=====

create table tempp
(
   num int(10),
   sq  int(10),
   cube int(10)
 );
 
 delimiter @
create procedure Q2()
begin 
declare num int(10) default 5;
declare sq int(10);
declare cube int(10);
set sq=num*num;
set cube=num*num*num;
insert into tempp values(num,sq,cube);
end;@
delimiter ;

call Q2;
select * from tempp;

Output:->
---------
# num, sq, cube
   5, 25, 125

--------------------------------------------------------------------------------------------------
Q3)Convert a temperature in Fahrenheit (F) to its equivalent in Celsius (C) and vice versa.
   The required formulae are:- C= (F-32)*5/9
   F= 9/5*C + 32
ANS:-
======

create table Q3
(
 cel float(7,2),
 far float(7,2)
 );
 
  delimiter $
create procedure Q3()
begin 
declare cel float(7,2) default 2 ;
declare far float(7,2) default 2;
declare temp float(7,2) default 2;
set cel = (far-32)*5/9;
set far= (9/5)*temp + 32;
insert into Q3 values(cel,far);
end;$
delimiter ;

call Q3();
select * from Q3;

Output:->
----------

# cel, far
-16.67, 35.60
------------------------------------------------------------------------------------------------
Q4) Convert a number of inches into yards, feet, and inches. For example, 124 inches
    equals 3 yards, 1 foot, and 4 inches.
ANS:-
======

create table Q4(
input int(4),
yards int(4),
foot int(4),
inches int(4)
);

delimiter //
create procedure Q4 (inch int)

begin

declare yard int(4);
declare foot int(4);
declare inches int(4);
set yard =inch/36 ;
set foot= (inch % 36) / 12;
set inches = inch -((foot*12)+(yard*36));
insert into Q4 values (inch,yard,foot,inches);

 
end;//
delimiter ;


call Q4(124);

select* from Q4;

Output:->
----------
# input, yards, foot, inches
   124,   3,     1,     4

---------------------------------------------------------------------------------------------------
Q5) Write a program that enables a user to input an integer. The program should then
    state whether the integer is evenly divisible by 5.
ANS:-
=====

create table Q5(
a int (4),
b char (10)
);


delimiter %
create procedure Q5()
begin
declare a int(4) default 10;
declare b char (10) ;

if (a mod 5 = 0)  then

    insert into Q5 values (a, 'yes');
else 
	insert into Q5 values (b, 'No');
end if;
end; %
delimiter ;

call Q5();

select * from Q5;

Output:->
-----------
 


---------------------------------------------------------------------------------------------------
Q6) Your block should read in two real numbers and tell whether the product of the two
    numbers is equal to or greater than 100.
ANS:-
=====>

create table Q6(
s char (10),
g char (10)
);

delimiter $

create procedure Q6(p int, q int)
begin
declare  s int(4);
declare  g int (4);
if ( p * q <= 100) then  
    insert into Q6 values ( p*q , 'smaller');
else 
    insert into Q6  values ( p*q , 'greater');
end if;
end; $
delimiter ;


call Q6(5, 5);
select * from Q6;





























































call x1();

select * from a_p;